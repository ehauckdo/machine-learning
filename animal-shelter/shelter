#! /usr/bin/env python
import pandas
import math
import operator

def clean_data(dataframe):
    dataframe.loc[dataframe["AnimalType"] == "Dog", "AnimalType"] = 0
    dataframe.loc[dataframe["AnimalType"] == "Cat", "AnimalType"] = 1

    # most occurred value, we can probably improve this later
    dataframe["SexuponOutcome"] = dataframe["SexuponOutcome"].fillna("Neutered Male")

    dataframe.loc[dataframe["SexuponOutcome"] == "Neutered Male", "SexuponOutcome"] = 0
    dataframe.loc[dataframe["SexuponOutcome"] == "Spayed Female", "SexuponOutcome"] = 1
    dataframe.loc[dataframe["SexuponOutcome"] == "Intact Male", "SexuponOutcome"] = 2
    dataframe.loc[dataframe["SexuponOutcome"] == "Intact Female", "SexuponOutcome"] = 3
    dataframe.loc[dataframe["SexuponOutcome"] == "Unknown", "SexuponOutcome"] = 4
    
    dataframe.loc[dataframe["OutcomeType"] == "Transfer", "OutcomeType"] = 0
    dataframe.loc[dataframe["OutcomeType"] == "Adoption", "OutcomeType"] = 1
    dataframe.loc[dataframe["OutcomeType"] == "Return_to_owner", "OutcomeType"] = 2
    dataframe.loc[dataframe["OutcomeType"] == "Euthanasia", "OutcomeType"] = 3
    dataframe.loc[dataframe["OutcomeType"] == "Died", "OutcomeType"] = 4 

    #terrible hack, improve this later
    def get_age(animal):
        aid, sex, age = animal
        try:
            if 'week' in age or 'month' in age:
                return 0
            else:
                return age.split()[0]
        except:
            return -1

    dataframe["AgeuponOutcome"] = dataframe[['AnimalID', 'SexuponOutcome', 'AgeuponOutcome']].apply(get_age, axis=1)

    # can be improved, but works
    breed_mapping = {}
    def get_breed(animal):
        breed = animal["Breed"].split(",")[0]
        try:
            breed_mapping[breed] += 1
        except KeyError:
            breed_mapping[breed] = 1
        return breed_mapping[breed]    

    def apply_breed(animal):
        breed = animal["Breed"].split(",")[0]
        return breed_mapping[breed]

    dataframe.apply(get_breed, axis=1)
    dataframe['Breed'] = dataframe.apply(apply_breed, axis=1)
    dataframe.loc[dataframe["Breed"] < 50, "Breed"] = 1

    # can be improved, but works
    color_mapping = {} 
    def get_color(animal):
        color = animal['Color'].split(",")[0]  
        try:
            color_mapping[color] += 1
        except KeyError:
            color_mapping[color] = 1 
        return color_mapping[color]    

    def apply_color(animal):
        color = animal['Color'].split(",")[0]  
        return color_mapping[color]

    dataframe.apply(get_color, axis=1)
    dataframe['Color'] = dataframe.apply(apply_color, axis=1)
    dataframe.loc[dataframe["Color"] < 10, "Color"] = 1

shelter = pandas.read_csv("train.csv")
test = pandas.read_csv("test.csv")

#print(shelter.info())
#print("-------------------")
#print(test.info())

clean_data(shelter)
#clean_data(test)

#print(shelter["SexuponOutcome"].unique())
#print(test["SexuponOutcome"].unique())
print(shelter["Color"].value_counts())
#print(test["SexuponOutcome"].value_counts())

shelter.to_csv("testing.csv", index=False)
