#!  /usr/bin/env python
# -*- coding: utf-8 -*- 

import pandas as pd
import numpy as np
import sys
from preprocess import translate_phone_brands
import gc

# ====== Load subset of train ======
print("Loading train set...")

train = pd.read_csv("csv/gender_age_train.csv", dtype={'device_id':np.str})

# get first 5 rows as a smple
df = train.head(5)

# get a specific device that has many events/app_events
extra_row =  train.iloc[[32880]]
df = df.append(extra_row)

# save first instance of train_subset: user + phone
df.to_csv("output/train_subset.csv", index=False)

print("Done.")

# ====== Load phone_brand and merge ======
print("Loading and merging phone_brand_device_model.csv...")

phone_brand = pd.read_csv("csv/phone_brand_device_model.csv", dtype={'device_id':np.str})
phone_brand = translate_phone_brands(phone_brand)
phone_brand = phone_brand.fillna("Unkown")

df = pd.merge(df,phone_brand, left_on='device_id', right_on='device_id', how='left', suffixes=['','_'])

df.to_csv("output/train_subset2.csv", index=False)

print("Done.")

# ====== Load events and merge ===========
print("Loading and merging events.csv...")

events = pd.read_csv("csv/events.csv", dtype={'device_id':np.str, 'event_id':np.str})

df = pd.merge(df,events,left_on='device_id',right_on='device_id', how='left', suffixes=['','_'])

# save second instance of train_subset: user + phone + events
df.to_csv("output/train_subset3.csv", index=False)

print("Done.")

# ====== Load events and merge ===========
print("Loading and merging app_events.csv...")

app_events=pd.read_csv('csv/app_events.csv', dtype={'event_id':np.str, 'app_id':np.str})

df = pd.merge(df,app_events,left_on='event_id',right_on='event_id', how='left', suffixes=['','_'])

# save third instance of train_subset: user + phone + events + app_events
df.to_csv("output/train_subset4.csv", index=False)

print("Done.")

# ====== Load app_labels and merge =========
print("Loading and merging app_labels.csv...")

app_labels= pd.read_csv('csv/app_labels.csv', dtype={'label_id':np.str, 'app_id':np.str})

df = pd.merge(df,app_labels,left_on='app_id',right_on='app_id', how='left', suffixes=['','_'])

# save fourth instance of train_subset: user + phone + events + app_events + app_labels
df.to_csv("output/train_subset5.csv", index=False)

print("Done.")

# ====== Load label_categories and merge ======
print("Loading and merging app_categories.csv...")

label_categories = pd.read_csv('csv/label_categories.csv', dtype={'label_id':np.str, 'category':np.str})
label_categories = label_categories.fillna("unkown")

df = pd.merge(df,label_categories,left_on='label_id',right_on='label_id', how='left', suffixes=['','_'])

# save fifth instance of train_subset: user + phone + events + app_events + app_labels
df.to_csv("output/train_subset6.csv", index=False)

print("Done.")

# ====== Print report ======

print("\nFinal shape:")
unique_devices = [x for x in df["device_id"].unique() if str(x) != 'nan']
print("Unique devices: {0}.".format(len(unique_devices)))
unique_events = [x for x in df["event_id"].unique() if str(x) != 'nan']
print("Unique events: {0}.".format(len(unique_events)))
unique_app_events = [x for x in df["app_id"].unique() if str(x) != 'nan']
print("Unique apps: {0}.\n".format(len(unique_app_events)))

list_unique_devices = df['device_id'].unique()
if False:
    for device in list_unique_devices:
        print("Device ID: {0}:".format(device))
        events = df.loc[df['device_id'] == device]
        unique_events = [x for x in events["event_id"].unique() if str(x) != 'nan']
        print("Total events: {0}.".format(len(unique_events)))
        if unique_events:
            unique_app_events = [x for x in events["app_id"].unique() if str(x) != 'nan']
            print("Total app_events: {0}.".format(len(unique_app_events)))
            unique_categories = [x for x in events["label_id"].unique() if str(x) != 'nan']
            print("Total categories: {0}.".format(len(unique_categories)))
        print("")
    


